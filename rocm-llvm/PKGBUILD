# Maintainer: Yuanhang Sun <leavelet at 163 dot com>
# Contributor: Torsten Ke√üler <tpkessler at archlinux dot org>
# Contributor: acxz <akashpatel2008 at yahoo dot com>

pkgname=rocm-llvm
pkgdesc='Radeon Open Compute - LLVM toolchain (llvm, clang, lld)'
pkgver=5.6.0
pkgrel=1
arch=('x86_64' 'loong64' )
url='https://rocm.docs.amd.com/en/latest/reference/rocmcc/rocmcc.html'
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'python' 'ninja' 'mold')
_git='https://github.com/RadeonOpenCompute/llvm-project'
source=("${pkgname}-${pkgver}.tar.gz::$_git/archive/rocm-$pkgver.tar.gz"
        "${pkgname}-stdint.patch"
	"llvm-newreloc-la64.patch"
	"RuntimeDyld-MCJIT-Add-LoongArch-support.patch")
sha256sums=('e922bd492b54d99e56ed88c81e2009ed6472059a180b10cc56ce1f9bd2d7b6ed'
            '46a4bd4795437ea16ef2a2f8511d4492a92f961ce7916b0ff611123575152450'
            'f26ad05b93f5b7918fcf4209e892d135029e58ca0f0141a50cb67bfec7e80061'
            '7c7de135adc059b5877270c38e050e02c516c6cb04cd4b10f1111d956e0c82e0')
options=(staticlibs !lto)
_dirname="$(basename "$_git")-$(basename "${source[0]}" .tar.gz)"

prepare() {
    cd "$_dirname"
    patch -Np1 -i "$srcdir/${pkgname}-stdint.patch"
    cd "llvm"
    patch -Np1 -i "$srcdir/RuntimeDyld-MCJIT-Add-LoongArch-support.patch"
    patch -Np2 -i "$srcdir/llvm-newreloc-la64.patch"
    cd ..
}

build() {
    # Build only minimal debug info to reduce size
    CFLAGS+=' -g1'
    CXXFLAGS+=' -g1'

    local cmake_args=(
        -G Ninja
        -B build
        -S "$_dirname/llvm"
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX='/opt/rocm/llvm'
	-DCMAKE_SKIP_RPATH=ON
        -DLLVM_ENABLE_PROJECTS='llvm;clang;compiler-rt;lld'
        -DLLVM_HOST_TRIPLE=$CHOST
	-DLLVM_TARGETS_TO_BUILD='AMDGPU;NVPTX;LoongArch'
        -DCLANG_DEFAULT_LINKER=mold
        -DLLVM_INSTALL_UTILS=ON
        -DLLVM_ENABLE_BINDINGS=OFF
        -DLLVM_LINK_LLVM_DYLIB=OFF
      	-DLLVM_BUILD_LLVM_DYLIB=ON
        -DLLVM_ENABLE_ASSERTIONS=ON
        -DOCAMLFIND=NO
        -DLLVM_ENABLE_OCAMLDOC=OFF
        -DLLVM_INCLUDE_BENCHMARKS=OFF
        -DLLVM_BUILD_TESTS=ON
        -DLLVM_INCLUDE_TESTS=ON
        -DCLANG_INCLUDE_TESTS=ON
        -DLLVM_BINUTILS_INCDIR=/usr/include
	-DGCC_INSTALL_PREFIX=/usr
    )
    
    cmake "${cmake_args[@]}"
    cmake --build build -j $(nproc)
}

# check() {
#     LD_LIBRARY_PATH="$PWD/build/lib" \
#     cmake --build build --target check-llvm{,-unit} check-clang{,-unit} check-lld
# }

package() {
    DESTDIR="$pkgdir" cmake --install build

    # https://bugs.archlinux.org/task/28479
    install -d "$pkgdir/opt/rocm/llvm/lib/bfd-plugins"
    ln -s /opt/rocm/llvm/lib/LLVMgold.so "$pkgdir/opt/rocm/llvm/lib/bfd-plugins/LLVMgold.so"

    cd "$_dirname"
    install -Dm644 llvm/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/llvm-LICENSE"
    install -Dm644 clang/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/clang-LICENSE"
    install -Dm644 clang-tools-extra/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/clang-tools-extra-LICENSE"
    install -Dm644 compiler-rt/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/compiler-rt-LICENSE"
    install -Dm644 lld/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/lld-LICENSE"
}

